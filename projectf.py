# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1z9MMcjnImGUX0jwJErA8TlFLPyTIsq_2
"""

import hashlib
import os
import json

class PasswordManager:
    def __init__(self, storage_file='passwords.json'):
        self.storage_file = storage_file
        self.users = {}

    def create_user(self, username, password):
        if username in self.users:
            print(f"User '{username}' already exists. Choose another username.")
            return

        salt = os.urandom(32)
        hashed_password = self.hash_password(password, salt)

        self.users[username] = {'salt': salt.hex(), 'hashed_password': hashed_password.hex()}
        self.save_data()

    def authenticate_user(self, username, password):
        if username not in self.users:
            print(f"User '{username}' not found.")
            return False

        stored_salt = bytes.fromhex(self.users[username]['salt'])
        stored_password = bytes.fromhex(self.users[username]['hashed_password'])

        hashed_password = self.hash_password(password, stored_salt)

        if hashed_password == stored_password:
            print(f"Authentication successful for user '{username}'.")
            return True
        else:
            print(f"Authentication failed for user '{username}'.")
            return False

    def hash_password(self, password, salt):
        # Use a secure hash function (e.g., SHA-256) with the salt
        hasher = hashlib.sha256()
        hasher.update(salt)
        hasher.update(password.encode('utf-8'))
        return hasher.digest()

    def save_data(self):
        with open(self.storage_file, 'w') as file:
            json.dump(self.users, file)

    def load_data(self):
        try:
            with open(self.storage_file, 'r') as file:
                self.users = json.load(file)
        except FileNotFoundError:
            # If the file doesn't exist, create an empty users dictionary
            self.users = {}

# Example usage:
password_manager = PasswordManager()

print("***********Password Manager Project Using Hashing*************\n")
print("                                        Submitted By :- Pooja B")

# Create a new user
print("\n")
print("\n")
print("Create Your Account \n")
usern=input("  Enter your Username : ")
passwordu=input("  Enter Password : ")
password_manager.create_user(usern, passwordu)

# Authenticate the user
print("\n")
print("Login To Your Account\n")
useraut=input(" Enter the Username : ")
passwordaut=input(" Enter your Password : ")
password_manager.authenticate_user(useraut, passwordaut)
